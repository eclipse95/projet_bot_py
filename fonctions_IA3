
#fonction qui permet de lister tous les noeuds qui nous appartiennent
def nos_noeuds(plateau):
    monflag = plateau.flag
    print('mon drapeau:',monflag)
    noeuds = list()
    for i in range(len(plateau.liste_node)):
        #print('propriétaire du noeud' ,plateau.liste_node[i],' est ',plateau.liste_node[i].owner)
        if plateau.liste_node[i].owner == int(monflag):
            noeuds.append(plateau.liste_node[i])
    return noeuds

#
def defendre(plateau):
    global idd
    global nos_noeuds

#    
def jailetemps(off, deff, offenemis, distance, vitesse):
    production_ennemie = deff + (vitesse*distance) + offenemis
    if off <= production_ennemie:
        return False
    else:
        return True

#fonction qui cherche a attaquer les ennemis adjacents
def voisins_ennemis(plateau, nos_noeuds):
    for i in range(len(nos_noeuds)):
        for j in range(len(nos_noeuds[i].neighbor)):
            if nos_noeuds[i].neighbor[j] not in nos_noeuds:                    
                a = creation_attaque(nos_noeuds[i].id,nos_noeuds[i].neighbor[j].id,nos_noeuds[i].neighbor[j].offsize, plateau.flag)
                #print(a)
                #order(a)
                return a
    return True

#calcul pour savoir a quel moment conquerir une planete
def voisins_neutres(plateau):
    global nos_noeuds
    neutres
    for i in range(len(neutres)):
        if(neutres[i].defsize>0):
            #recherche d'un noeud voisin
            #recherche
            
            creation_attaque(neutre[i])

#fonction qui cherche le parcourt pour aller au voisin avec la plus petite distance(dijkstra)
def ennemi_le_plus_proche(plateau):
    pass


#fonction qui est appellée pour creer un ordre!
def creation_attaque(depart, cible, quantitee, monflag):
    string = str(monflag)+'MOV'+str(quantitee)+'FROM'+str(depart)+'TO'+str(cible)
    return string


#if __name__ == "__main__":

    #identifiant = "[20ac18ab-6d18-450e-94af-bee53fdc8fca]"
    #print(creation_attaque(1,2,120))

    #"[0947e717-02a1-4d83-9470-a941b6e8ed07]MOV33FROM1TO4"

    #[<userid>]MOV<%offunits>FROM<cellid>TO<cellid>

    #le pourcentage des unités offensives utilise la divion entière. Par exemple : 25% de 50=50*25/100=12.
    #un ordre dont l'effectif d'unités off est nul (par ex., 33% de 2 unités) est ignoré.
